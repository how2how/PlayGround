<!DOCTYPE html>
<html>
  <head>
    <link rel="canonical" href="https://blog.csdn.net/sinat_36219858/article/details/70186649"/> 
    <script type="text/javascript">
        var username = "sinat_36219858";
        var _blogger = username;
        var blog_address = "https://blog.csdn.net/sinat_36219858";
        var static_host = "https://csdnimg.cn/release/phoenix/";
        var currentUserName = ""; 
        var fileName = '70186649';
        var commentscount = 0;
        var islock = false;
        window.quickReplyflag = true;
        var totalFloor = 0;
        var isBole = false;
        var isDigg = false;
        var isExpert = false;
        var isAdm = false;
        var baiduKey = "python+subprocess.popen+communicate";
        var needInsertBaidu = false;
        var isShowAds = true;
        var ChannelId = 16;
    </script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="referrer" content="always">
    <script src="https://csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="https://csdnimg.cn/public/static/css/avatar.css">
                <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/production/main-f869aa95a4.css">
          <link rel="stylesheet" href="https://csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script src="https://csdnimg.cn/rabbit/exposure-click/main-1.0.5.js"></script>
    <script type="text/javascript" src="https://csdnimg.cn/pubfooter/js/tracking-1.0.2.js" charset="utf-8"></script>
    <script type="text/javascript" src="https://csdnimg.cn/release/phoenix/production/main-dde4360358.js"></script>

    <script src="https://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">
        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end
    </script>
    <meta name="description" content="英语原文：　https://www.python.org/dev/peps/pep-0324/This module defines one class called Popen:class Popen(args, bufsize=0, executable=None,
                    stdin=None, stdout=None, stderr=None,
      ..." />
    <meta name="keywords" content="python,subprocess" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">
    <title>python的subprocess．Popen()的简单用法 - CSDN博客</title>
    <link href="https://csdnimg.cn/public/favicon.ico" rel="SHORTCUT ICON">
              <script src="https://csdnimg.cn/search/baidu_search-1.1.2.js?v=201802071056&autorun=true&install=true&keyword=python+subprocess.popen+communicate"  type="text/javascript"></script>
                      <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/production/htmledit_views-0a60691e80.css">
            <style>
            .MathJax, .MathJax_Message, .MathJax_Preview{
                display: none
            }
      </style>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="https://csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="https://blog.csdn.net/"></script>
<div class="container clearfix">
  <main>
    <div style="display:none;">
      <img src="" onerror='setTimeout(function(){if(!/(csdn.net|iteye.com|baiducontent.com|googleusercontent.com|360webcache.com|sogoucdn.com|bingj.com|baidu.com)$/.test(window.location.hostname)){window.location.href="\x68\x74\x74\x70\x73\x3a\x2f\x2f\x77\x77\x77\x2e\x63\x73\x64\x6e\x2e\x6e\x65\x74"}},3000);'>
    </div>
    <article>
        <h1 class="csdn_top">python的subprocess．Popen()的简单用法</h1>
        <div class="article_bar clearfix">
            <div class="artical_tag">
                <span class="original">
                翻译                </span>
                <span class="time">2017年04月15日 20:43:41</span>
            </div>

            <ul class="article_tags clearfix csdn-tracking-statistics tracking-click" data-mod="popu_377" >
                <li class="tit">标签：</li>

<!--          [startarticletags]-->
                                                            <li><a href="http://so.csdn.net/so/search/s.do?q=python&t=blog" target="_blank">python</a> <span>/</span></li>
                                            <li><a href="http://so.csdn.net/so/search/s.do?q=subprocess&t=blog" target="_blank">subprocess</a> <span>/</span></li>
                                            <li><a href="http://so.csdn.net/so/search/s.do?q=Popen()&t=blog" target="_blank">Popen()</a> <span>/</span></li>
                                    <!--          [endarticletags]-->
            </ul>
            <ul class="right_bar">
                <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">8617</span></button></li>
                <li class="edit">
                    <a class="btn-noborder" href="" >
                        <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                    </a>
                </li>
                <li class="del">
                    <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                        <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                    </a>
                </li>
            </ul>
        </div>
        <div id="article_content" class="article_content csdn-tracking-statistics tracking-click" data-mod="popu_519" data-dsm="post">
                            <div class="htmledit_views">
                        <p>英语原文：<span style="font-size:12px;"><em>　<span style="color:#009900;">https://www.python.org/dev/peps/pep-0324/</span></em></span></p><p><span class="property"><strong><span style="font-size:14px;">This module defines one class called Popen:</span></strong><br /></span></p><p></p><pre class="python">class Popen(args, bufsize=0, executable=None,
                    stdin=None, stdout=None, stderr=None,
                    preexec_fn=None, close_fds=False, shell=False,
                    cwd=None, env=None, universal_newlines=False,
                    startupinfo=None, creationflags=0):</pre><p></p>参数分析：<p></p><p>-args  可以是字符串或序列数据如list,要执行的程序名应在参数序列的第一个位置上，后面可以跟</p><p>　　　程序所需要的命令行参数</p><p>shell   在UNIX 上默认  shell=False, 在这种情况下类Popen 用  os.execvp() 来执行子程序，</p><p>　　　args  应该是一个序列，字符串也被看作只有程序名的序列。</p><p>　　　当 shell=True,　如果 args 是字符串，它将作为命令行字符串通过shell 执行．如果是一个序列，</p><p>　　　它的第一个条目将作为命令行字符串，后面的条目作为附加的shell参数。<br /></p><p>　　　在 Windows 上,类Popen 用 CreateProcess() 来执行子程序，它以字符串作为参数。　</p><p>　　　如果args 是一个序列，它将通过 list2cmdline 方法转化为字符串，要注意的是不是所有的MS Windows</p><p>　　　用相同的方法解释命令行。</p><p>- bufsize　如果被赋值，值将作为内建函数open() 的参数，0意味着无缓冲，1就是行缓冲，任何其它的正值，</p><p>　　　意味着用和给定值大小接近的一个缓冲，负值就使用系统默认的缓冲尺寸，类的默认值是0无缓冲．（实时清空缓冲区）<br /></p><p>- stdin, stdout and stderr　分别指定子程序的标准输入，标准输出，标准错误输出的文件句柄，有效值是一个存在的文件对象</p><p><span style="white-space:pre;"></span>PIPE （一个正整数）或者是None, 若赋值为PIPE ，就会为子程序创建新管道pipe , 若为None ，就不为子程序创建管          道，子程序的文件句柄继承父程序。另外，stderr　可以是STDOUT, 这表明子程序的错误数据应该被获得存入相同的文件 句柄，通过stdout输出．</p><p>-<span style="white-space:pre;"> </span> preexec_fn　被赋值一个可以调用的对象，这个对象在子程序执行前调用到子进程，</p><p>-<span style="white-space:pre;"> </span>close_fds　是true , 所有的文件描述符号除了0,1,2 在子程序执行前将被关闭。<br /></p><p>-<span style="white-space:pre;"> </span>shell 是true ，命令行参数将通过shell 执行。</p><p>-<span style="white-space:pre;"> </span>cwd 不是None ,在子程序执行前，当前的工作目录将变为cwd。</p><p>-<span style="white-space:pre;"> </span>env 不是None , 它将为新进程指定环境变量。</p><p>-<span style="white-space:pre;"> </span>universal_newlines是true, 文件对象stdout,stderr将被打开作为text文件，行将被中断通过</p><p>　　　这些 '\n' (Unix), '\r' (Mac), '\r\n ' (Win)换行符号，所有这些外部的符号被python 看作'\n' .</p><p>　　　注意这些特征只在python支持通用换行的时候有效（默认支持）</p><p>　　　communicate()方法没有更新对文件换行属性的支持</p><p>-<span style="white-space:pre;"> </span>startupinfo , creationflags 被赋值，它将传递一个潜在的创建进程的方法CreateProcess()，</p><p>　　　它能指定主窗口外观，和新进程的优先等级（Win上有效）</p><p>            subprocess.startupinfo 的详解网址: <span style="color:rgb(0,153,0);">http://www.programcreek.com/python/example/5376/subprocess.STARTUPINFO</span><br /></p><p>            例如对gui程序调用exe阻止dos窗口的弹出，可如下定义 startupinfo  参数，</p><p></p><pre class="python">from subprocess import *  
from subprocess import  STARTUPINFO #对于python2.7需要单独引用STARTUPINFO

import os
startupinfo = STARTUPINFO()
startupinfo.dwFlags |=  STARTF_USESHOWWINDOW
startupinfo.wShowWindow =  SW_HIDE

Popen("cmd",stdin = PIPE, stdout = PIPE,stderr=PIPE,startupinfo=startupinfo)</pre><p></p><p>下面是隐藏dos的函数</p><pre class="python">def supress_window():
    if os.name == 'nt':
        startupinfo =  STARTUPINFO() #only used in python3
        startupinfo.dwFlags |=  STARTF_USESHOWWINDOW
        startupinfo.wShowWindow =  SW_HIDE
        return startupinfo
    return None</pre><p>这个类也定义了2个便捷函数</p><p></p><pre class="python"> - call(*args, **kwargs):</pre><p></p><p><span style="white-space:pre;"></span>　　　运行带参数的命令，等待命令执行完成，返回返回码的属性。</p><p><span style="white-space:pre;"></span>　　　这里的参数与作为类Popen的构造参数一样，</p><p>　　　只有命令时候用 call(＂cmd＂)<strong>,</strong>命令带参数时候要用list形式['cmd', 'args']<br /></p><p>　　　例如：</p><p>　　　retcode = call('ls')<br /></p><p><em>　　</em>　retcode = call(["ls", "-l"])</p><p><strong>　　　</strong>retcode = call( ("ls", "-l") )<strong><strong><br /></strong><br /></strong></p>---------------------------------------------------------------------<p></p><p><em><strong>以下为类Popen的成员</strong><br /></em></p><p><em>下面是成员方法：</em></p><p><strong>poll()<span style="white-space:pre;"> <span style="white-space:pre;"></span></span></strong>检测子进程是否终止，返回执行结果状态<br /></p><p><strong>wait()<span style="white-space:pre;"> <span style="white-space:pre;"></span></span></strong>等待子进程终止，返回执行结果<br /></p><p><strong>communicate(input=None)<span style="white-space:pre;"> </span></strong>：与子进程交流，把该方法括号中的数据发送到子进程的标准输入stdin，</p><p><span style="white-space:pre;"></span>　　　数据格式应该是字符串，若为None,则不给子进程发送数据。返回的元组从stdout,stderr中读取</p><p><span style="white-space:pre;"></span>　　　数据直到文件结尾。</p><p><span style="white-space:pre;"></span>　　　communicate() returns a tuple (stdout, stderr).</p><p><span style="white-space:pre;"></span>　　　返回包含两个元素的元组，第一是stdout输出的字符串，第二个是stderr的字符串，</p><p></p><pre class="prettyprint" style="list-style:none outside;margin-top:0px;margin-bottom:0px;padding:8px 8px 1px;border:1px solid rgb(209,209,232);line-height:1.4;font-size:14px;white-space:pre-wrap;background-color:rgb(247,247,249);"><span class="kwd" style="list-style:none outside;margin:0px;padding:0px;color:rgb(0,0,136);">out</span><span class="pun" style="list-style:none outside;margin:0px;padding:0px;color:rgb(102,102,0);">,</span><span class="pln" style="list-style:none outside;margin:0px;padding:0px;"> err </span><span class="pun" style="list-style:none outside;margin:0px;padding:0px;color:rgb(102,102,0);">=</span><span class="pln" style="list-style:none outside;margin:0px;padding:0px;"> std</span><span class="pun" style="list-style:none outside;margin:0px;padding:0px;color:rgb(102,102,0);">.</span><span class="pln" style="list-style:none outside;margin:0px;padding:0px;">communicate</span><span class="pun" style="list-style:none outside;margin:0px;padding:0px;color:rgb(102,102,0);">()</span></pre><p></p><p><span style="white-space:pre;"></span>　　　注意：输出的字符串缓存在内存中，因此，如果输出数据较多时候应该避免使用这个方法。</p><p><em>下面是成员变量：</em></p><p><strong>stdin</strong><span style="white-space:pre;"><strong> </strong><span style="white-space:pre;"></span></span>如果stdin=PIPE,这个属性是个文件对象，提供子进程的输入，否则它是None<br /></p><p><strong>　　</strong><em>　obj.stdin.write(" args ")</em><strong><br /></strong></p><p><strong>stdout</strong><span style="white-space:pre;"><strong> </strong><span style="white-space:pre;"></span></span>如果stdout=PIPE,这个属性是个文件对象，提供子进程的输出，否则它是None</p><p><strong>　<em>　　</em></strong><em>obj.stdout.read() </em><strong><br /></strong></p><p><strong>stderr</strong><span style="white-space:pre;"><strong> </strong><span style="white-space:pre;"></span>如果std</span>err<span style="white-space:pre;">=PIPE,这个属性是个文件对象，提供子进程的</span>错误<span style="white-space:pre;">输出，否则它是None</span></p><p><strong>pid </strong><span style="white-space:pre;"><strong> </strong><span style="white-space:pre;"></span></span>子程序的进程ID</p><p><strong>returncode<span style="white-space:pre;"> </span></strong>子程序返回码，None 说明子进程没有终止，负值-N 说明被符号-N终止 (UNIX only)。<br /></p><br /><br /><p>-------------------实例--------------------------------------------------<br /></p><dl class="class"><dt>对于一般的exe文件：</dt></dl><pre class="python">#! /usr/bin/python3.5 
from subprocess import *
import os 
p = Popen('/home/app', stdin =  PIPE,stdout = PIPE, stderr = PIPE )  
p.stdin.write('3 \n')   
p.stdin.write('4 \n')   
print p.stdout.read()   </pre><p>app　的源码：</p><pre class="cpp">#include &lt;iostream&gt;   
using namespace std;   

int main(int argc, const char *artv[])   
{   
  int x, y;   
  cin &gt;&gt; x;   
  cin &gt;&gt; y;   
  cout &lt;&lt; x &lt;&lt; " + " &lt;&lt; y &lt;&lt; " = " &lt;&lt; x + y &lt;&lt; endl;   
  return 0;   
} </pre>对于python调用gnuplot画图<p>Popen.write()方法，在python2中参数可以是字符串,在python3中要加上b把字符串转化为二进制<br /></p><p></p><pre class="python">#! /usr/bin/python3.5   
from subprocess import *
gnuplot= Popen('/usr/bin/gnuplot',stdin = PIPE,stdout=PIPE,stderr=PIPE).stdin
gnuplot.write(b"set terminal jpeg\n")
gnuplot.write(b"set output 'plot．jpg'\n")
gnuplot.write(b"set xlabel 'site'\n")
gnuplot.write(b"set ylabel 'value'\n")
gnuplot.write(b"set title '3Z code'\n")
gnuplot.write(b"plot sin(x)\n")
gnuplot.flush()
</pre><p>win下要有关闭进程的语句</p><p></p><pre class="python">from subprocess import *  
gnuplot= Popen('gnuplot',stdin = PIPE, stderr=PIPE).stdin  
gnuplot.write(b"set terminal jpeg \n")  
gnuplot.write(b"set output 'plot.jpg' \n")  
gnuplot.write(b"set xlabel 'site' \n")  
gnuplot.write(b"set ylabel 'value' \n")  
gnuplot.write(b"set title '3Z code' \n")  
gnuplot.write(b"plot sin(x) \n")  
gnuplot.flush()
gnuplot.close()</pre>转载请注明出处。<br /><br /><p></p><br /><p></p><p><br /></p>                </div>
                    </div>
        <script>
        $(".MathJax").remove();
        </script>
    </article>
      <div class="readall_box csdn-tracking-statistics tracking-click" data-mod="popu_376">
          <div class="read_more_mask"></div>
          <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
      </div>
      <div class="article_copyright">
         
              </div>
      <ul class="article_collect clearfix csdn-tracking-statistics tracking-click"  data-mod="popu_378">
          <li class="tit">本文已收录于以下专栏：</li>
<!--          [startarticlecolumns]-->
                                <!--          [endarticlecolumns]-->
      </ul>
      <div class="edu_promotion" style="margin: 16px 0;display:none;"></div>
      <div class="comment_box clearfix" id="comments">
          <div id="comment_form">
              <div id="commentsbmitarear">
                              </div>
          </div>
      </div>
      <div class="comment_li_outbox">
          <div id="comment_list"></div>
      </div>

      <div class="more_comment">
          <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
      </div>

      <!-- <h3 class="recommend_tit" id="related">相关文章推荐</h3> -->
      <div class="recommend_list clearfix" id="rasss">
                                          <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/u010649766/article/details/75573887"  target="_blank" strategy="BlogCommendFromBaidu_0">
                    <dd>
                        <h2>Python subprocess.Popen子进程管道阻塞</h2>
                        <div class="summary">
                            问题产生描述使用子进程处理一个大的日志文件，并对文件进行分析查询，需要等待子进程执行的输出结果，进行下一步处理。出问题的代码# 启用子进程执行外部shell命令
def __subprocess(se...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/6/2/4/3_u010649766.jpg" alt="u010649766" title="u010649766"></li>
                            <li class="user_name">u010649766</li>
                            <li class="time">2017年07月20日 18:46</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3536</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/gmq_syy/article/details/76855621"  target="_blank" strategy="BlogCommendFromBaidu_1">
                    <dd>
                        <h2>Python多进程（1）——subprocess与Popen()</h2>
                        <div class="summary">
                            转自：http://www.cnblogs.com/Security-Darren/p/4733368.html




　　Python多进程方面涉及的模块主要包括：

subproc...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/2/1/D/3_gmq_syy.jpg" alt="gmq_syy" title="gmq_syy"></li>
                            <li class="user_name">gmq_syy</li>
                            <li class="time">2017年08月07日 19:14</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1766</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                          <dl class="">
            <script>
            (function() {
              var s = "_" + Math.random().toString(36).slice(2);
              document.write('<div id="' + s + '"></div>');
              (window.slotbydup=window.slotbydup || []).push({
                id: '4765209',
                container: s,
                size: '808,120',
                display: 'inlay-fix'
              });
            })();
            </script>
          </dl>
                                        <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/g457499940/article/details/17068277"  target="_blank" strategy="BlogCommendFromBaidu_2">
                    <dd>
                        <h2>python 的 subprocess模块用法 popen</h2>
                        <div class="summary">
                            从python2.4版本开始,可以用subprocess这个模块来产生子进程,并连接到子进程的标准输入/输出/错误中去，还可以得到子进程的返回值。
subprocess意在替代其他几个老的模块或者函...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/1/E/3/3_g457499940.jpg" alt="g457499940" title="g457499940"></li>
                            <li class="user_name">g457499940</li>
                            <li class="time">2013年12月02日 10:32</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>79791</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/bcfdsagbfcisbg/article/details/78134172"  target="_blank" strategy="BlogCommendFromBaidu_3">
                    <dd>
                        <h2>python中os.system、os.popen、subprocess.popen的区别</h2>
                        <div class="summary">
                            最近项目中需要在python中执行shell脚本，以下解释使用os.system、 
os.popen和subprocess.popen的区别：1.os.system该函数返回命令执行结果的返回值，s...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/1/1/8/3_bcfdsagbfcisbg.jpg" alt="bcfdsagbfcisbg" title="bcfdsagbfcisbg"></li>
                            <li class="user_name">bcfdsagbfcisbg</li>
                            <li class="time">2017年09月29日 15:20</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>5994</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/class_brick/article/details/72885463"  target="_blank" strategy="BlogCommendFromBaidu_4">
                    <dd>
                        <h2>python当中subprocess里call与Popen的用法区别</h2>
                        <div class="summary">
                            http://blog.csdn.net/imzoer/article/details/8678029


subprocess的目的就是启动一个新的进程并且与之通信。
subprocess模块中只定...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/7/C/3/3_class_brick.jpg" alt="class_brick" title="class_brick"></li>
                            <li class="user_name">class_brick</li>
                            <li class="time">2017年06月06日 17:24</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3908</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/u011286208/article/details/47319115"  target="_blank" strategy="BlogCommendFromBaidu_5">
                    <dd>
                        <h2>subprocess.Popen（）详解</h2>
                        <div class="summary">
                            从python2.4版本开始,可以用subprocess这个模块来产生子进程,并连接到子进程的标准输入/输出/错误中去，还可以得到子进程的返回值。
subprocess意在替代其他几个老的模块或者函...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/7/5/3/3_u011286208.jpg" alt="u011286208" title="u011286208"></li>
                            <li class="user_name">u011286208</li>
                            <li class="time">2015年08月06日 16:35</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2284</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/wtq1993/article/details/51194119"  target="_blank" strategy="BlogCommendFromBaidu_6">
                    <dd>
                        <h2>Python执行shell脚本的几种方式（最好用subprocess.Popen来替代os.system）</h2>
                        <div class="summary">
                            1. 使用os.system("cmd")
这是最简单的一种方法，特点是执行的时候程序会打出cmd在linux上执行的信息。使用前需要import os。



[python] view...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/8/1/0/3_wtq1993.jpg" alt="wtq1993" title="wtq1993"></li>
                            <li class="user_name">wtq1993</li>
                            <li class="time">2016年04月19日 21:24</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>4509</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/imzoer/article/details/8678029"  target="_blank" strategy="BlogCommendFromBaidu_7">
                    <dd>
                        <h2>Python中subprocess学习</h2>
                        <div class="summary">
                            生命不息奋斗不止！
subprocess的目的就是启动一个新的进程并且与之通信。
subprocess模块中只定义了一个类: Popen。可以使用Popen来创建进程，并与进程进行复杂的交互。它的...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/0/D/6/3_imzoer.jpg" alt="imzoer" title="imzoer"></li>
                            <li class="user_name">imzoer</li>
                            <li class="time">2013年03月15日 14:53</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>105611</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/pugongying1988/article/details/54616797"  target="_blank" strategy="BlogCommendFromBaidu_8">
                    <dd>
                        <h2>解决大量调用Python subprocess.Popen产生的一些bug</h2>
                        <div class="summary">
                            自从工作了就好久没发博客，还是出来冒个泡=。= 
前段时间写的一个项目需要用python的subprocess.Popen大量调用某shell命令，运行到一定量级之后就会产生内存溢出，造成大量线程阻...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/E/9/D/3_pugongying1988.jpg" alt="pugongying1988" title="pugongying1988"></li>
                            <li class="user_name">pugongying1988</li>
                            <li class="time">2017年01月19日 15:41</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3140</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                                                    <dl class="clearfix csdn-tracking-statistics recommend_article" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <a href="https://blog.csdn.net/taohuaxinmu123/article/details/48828255"  target="_blank" strategy="BlogCommendFromBaidu_9">
                    <dd>
                        <h2>python执行系统命令的方法：os.system(), os.popen(), subprocess.Popen()</h2>
                        <div class="summary">
                            1、使用os.system("cmd")
这是最简单的一种方法，其执行过程中会输出显示cmd命令执行的信息。
例如：print os.system("mkdir test") >>>输出：0
可以看到...                        </div>

                        <ul>
                            <li class="avatar_img"><img src="https://avatar.csdn.net/1/5/6/3_taohuaxinmu123.jpg" alt="taohuaxinmu123" title="taohuaxinmu123"></li>
                            <li class="user_name">taohuaxinmu123</li>
                            <li class="time">2015年09月30日 14:59</li>
                            <li class="visited_num"><i class="icon iconfont icon-read"></i><span>9324</span></li>
                        </ul>
                    </dd>
                </a>
            </dl>
                              </div>
  </main>
<aside>
    <div class="right_box user_info">
    <dl class="inf_bar clearfix">
        <dt class="csdn-tracking-statistics tracking-click" data-mod="popu_381">
                <a href="https://blog.csdn.net/sinat_36219858" target="_blank">
                    <img src="https://avatar.csdn.net/3/5/2/3_sinat_36219858.jpg" class="avatar_pic">
        </a>
      </dt><dd>
            <h3 class="csdn-tracking-statistics tracking-click"  data-mod="popu_380"><a href="https://blog.csdn.net/sinat_36219858" target="_blank" id="uid">sinat_36219858</a></h3>
            <div class="medals" title="">
                      </div>
                    </dd>
    </dl>
    <div class="inf_number_box clearfix">
        <dl title="99">
            <dt>原创</dt>
            <dd>99</dd>
        </dl>
        <dl title="5">
            <dt>粉丝</dt>
            <dd id='fan'>5</dd>
        </dl>
        <dl title="5">
            <dt>喜欢</dt>
            <dd>5</dd>
        </dl>
        <dl title="7">
          <dt>评论</dt>
          <dd>7</dd>
        </dl>
    </div>

</div>
<div class="interflow clearfix">
      <div class="badge gradeAndbadge">
        <div>
                                    <img src='https://csdnimg.cn/jifen/images/xunzhang/xunzhang/chizhiyiheng.png' alt='持之以恒'>
                                            </div>
    </div>
      <div class="grade gradeAndbadge gradewidths">
      <span>等级：</span>
      <div>
        <a href="https://blog.csdn.net/home/help.html#level" title="4级,点击查看等级说明" target="_blank">
          <img class="grade-img" src="https://csdnimg.cn/jifen/images/xunzhang/jianzhang/blog4.png" alt="4级,点击查看等级说明">
        </a>
      </div>
    </div>
    <div class="gradeAndbadge gradewidths" title="48938">
        <span>访问量：</span>
        <span class="num odd-overhidden">4万+</span>
    </div>

    <div class="gradeAndbadge gradewidths" title="1434">
      <span>积分：</span>
      <span  class="num odd-overhidden">1434</span>
    </div>
    <div class="gradeAndbadge gradewidths" title="33032">
        <span>排名：</span>
        <span class="num odd-overhidden">3万+</span>
    </div>

</div>
<script type="text/javascript">
  // 判断并设置用户名位置，没有博客专家与关注按钮时，用户名居中
  $medals_children = $('.medals').children().length;
  $span_add_follow = $('#span_add_follow').length;
  if($medals_children === 0 && $span_add_follow === 0){
    $('.inf_bar dd').css('vertical-align','10px')
  }
</script>          <div class="extension_other csdn-tracking-statistics tracking-click" data-mod="popu_389">
          <!--u3032528-->
        <div class="flashrecommend">
                        <script type="text/javascript" src="//cee1.iteye.com/bwocoltly.js"></script>
                    </div>
      </div>
            <div class="writings">
      <div class="public_signal clearfix">
        <h3>博主最新文章</h3>
        <a href="https://blog.csdn.net/sinat_36219858" target="_blank" class="more"><span>更多文章</span></a>
      </div>
        <ul class="inf_list clearfix csdn-tracking-statistics tracking-click" data-mod="popu_382">
                        <li class="clearfix">
                <a href="https://blog.csdn.net/sinat_36219858/article/details/79800460" target="_blank">matplotlib.pyplot.plot()参数详解</a>
            </li>
                        <li class="clearfix">
                <a href="https://blog.csdn.net/sinat_36219858/article/details/79785283" target="_blank">注册表修改DOS的编码页为utf-8</a>
            </li>
                        <li class="clearfix">
                <a href="https://blog.csdn.net/sinat_36219858/article/details/79773318" target="_blank">神经网络--单层感知器</a>
            </li>
                        <li class="clearfix">
                <a href="https://blog.csdn.net/sinat_36219858/article/details/79695191" target="_blank">python的matplotlib.pyplot显示图片</a>
            </li>
                        <li class="clearfix">
                <a href="https://blog.csdn.net/sinat_36219858/article/details/79539382" target="_blank">C#版有道词典</a>
            </li>
                    </ul>
    </div>
                <div class="user-hotArticle sort ClassSort">
            <h3>文章分类</h3>
            <ul class="hotArticle-list sort-list ClassSort-list">
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/7565334" class="odd-overhidden floatL">机器学习</a>
                        <div class="read list-left floatR"><span>2篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6642518" class="odd-overhidden floatL">Python</a>
                        <div class="read list-left floatR"><span>17篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6642519" class="odd-overhidden floatL">C++</a>
                        <div class="read list-left floatR"><span>52篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6642520" class="odd-overhidden floatL">JAVA</a>
                        <div class="read list-left floatR"><span>3篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6779202" class="odd-overhidden floatL">ubuntu16.04</a>
                        <div class="read list-left floatR"><span>22篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6847818" class="odd-overhidden floatL">C++Reference</a>
                        <div class="read list-left floatR"><span>7篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6866359" class="odd-overhidden floatL">MFC</a>
                        <div class="read list-left floatR"><span>2篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6895678" class="odd-overhidden floatL">SMTP</a>
                        <div class="read list-left floatR"><span>6篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6867266" class="odd-overhidden floatL">SQL</a>
                        <div class="read list-left floatR"><span>5篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/6916438" class="odd-overhidden floatL">GNUplot</a>
                        <div class="read list-left floatR"><span>2篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/7177170" class="odd-overhidden floatL">algorithm</a>
                        <div class="read list-left floatR"><span>3篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/7187476" class="odd-overhidden floatL">数据结构</a>
                        <div class="read list-left floatR"><span>5篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/7248193" class="odd-overhidden floatL">dos</a>
                        <div class="read list-left floatR"><span>2篇</span></div>
                    </li>
                                    <li class="clearfix">
                        <a href="https://blog.csdn.net/sinat_36219858/article/category/7365145" class="odd-overhidden floatL">C#</a>
                        <div class="read list-left floatR"><span>1篇</span></div>
                    </li>
                            </ul>
            <div class="unfold-btn">
              <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
            </div>
        </div>
    <!--    [StartShowSelfColumn]-->
    <!--    [EndShowSelfColumn]-->
            <div class="user-hotArticle sort timeSort">
          <h3>文章存档</h3>
          <ul class="hotArticle-list timeSort-list">
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2018/04" class="odd-overhidden floatL">2018年4月</a>
                  <div class="read list-left floatR"><span>3篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2018/03" class="odd-overhidden floatL">2018年3月</a>
                  <div class="read list-left floatR"><span>3篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2018/02" class="odd-overhidden floatL">2018年2月</a>
                  <div class="read list-left floatR"><span>1篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2018/01" class="odd-overhidden floatL">2018年1月</a>
                  <div class="read list-left floatR"><span>1篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/12" class="odd-overhidden floatL">2017年12月</a>
                  <div class="read list-left floatR"><span>10篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/11" class="odd-overhidden floatL">2017年11月</a>
                  <div class="read list-left floatR"><span>2篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/10" class="odd-overhidden floatL">2017年10月</a>
                  <div class="read list-left floatR"><span>6篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/09" class="odd-overhidden floatL">2017年9月</a>
                  <div class="read list-left floatR"><span>9篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/08" class="odd-overhidden floatL">2017年8月</a>
                  <div class="read list-left floatR"><span>9篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/07" class="odd-overhidden floatL">2017年7月</a>
                  <div class="read list-left floatR"><span>5篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/06" class="odd-overhidden floatL">2017年6月</a>
                  <div class="read list-left floatR"><span>8篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/05" class="odd-overhidden floatL">2017年5月</a>
                  <div class="read list-left floatR"><span>14篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/04" class="odd-overhidden floatL">2017年4月</a>
                  <div class="read list-left floatR"><span>16篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/03" class="odd-overhidden floatL">2017年3月</a>
                  <div class="read list-left floatR"><span>13篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2017/01" class="odd-overhidden floatL">2017年1月</a>
                  <div class="read list-left floatR"><span>3篇</span></div>
                </li>
                            <li class="clearfix">
                  <a href="https://blog.csdn.net/sinat_36219858/article/month/2016/12" class="odd-overhidden floatL">2016年12月</a>
                  <div class="read list-left floatR"><span>2篇</span></div>
                </li>
                      </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
            <div class="user-hotArticle">
        <h3>博主热门文章</h3>
        <ul class="hotArticle-list csdn-tracking-statistics tracking-click" data-mod="popu_521">
<!--        [StartHotArticles]-->
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/70186649">python的subprocess．Popen()的简单用法</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8596</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/61195905">Ubuntu 16.04添加开机启动脚本的方法</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5281</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/70213593">C++连接SQL的简单例子</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3040</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/71069515">SMTP协议详解</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2826</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/70877677">用opencv对桌面截屏</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2427</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/61195864">修改ubuntu16.04 屏幕亮度</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2242</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/61196042">ubuntu16.10固定ip配置</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1970</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/70238232">python读取当前目录下的所有的excel文件</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1644</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/54022940">C++计算逆矩阵</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1438</span></div>
                </li>
                            <li>
                    <a href="https://blog.csdn.net/sinat_36219858/article/details/61203270">硬盘安装ubuntu16.04</a>
                    <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1120</span></div>
                </li>
            <!--        [EndHotArticles]-->
        </ul>
    </div>
    
<!--    [startcustom]-->
    <!--    [endcustom]-->
  <div class="fixRight_box" style="height:256px">
    <div class="fixRight">
                    <!--u3163270-->
                        <script type="text/javascript" src="//cee1.iteye.com/avneunkwb.js"></script>
                          <div class="persion_article"></div>
    </div>
  </div>
</aside>
</div>

<div class="left_fixed">
    <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
    </div>
    <ul class="left_menu" id="share_box">
        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics tracking-click" data-mod="popu_373" target="_self" title="点赞">
                <a href="javascript:void(0);" class="iconbox border_red" ><i class="icon iconfont icon-dianzan"></i></a>
                <a class="txt" href="javascript:void(0);">0</a>
            </button>
        </li>
        <li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics tracking-click" data-mod="popu_372" target="_self" title="目录">
                <a href="javascript:void(0);" class="iconbox border_black" ><i class="icon iconfont icon-mulu"></i></a>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <!--        <li>-->
        <!--            <button class="left-fixed-btn btn-like tracking-ad" data-mod="popu_373" target="_self">-->
        <!--                <span class="iconbox border_red"><i class="icon iconfont icon-xihuan-"></i></span>-->
        <!--                <span class="txt">喜欢</span>-->
        <!--                <span class="untxt">取消喜欢</span>-->
        <!--            </button>-->
        <!--        </li>-->
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics tracking-click" data-mod="popu_374"  id="com-quick-collect" target="_self" title="收藏">
                <a href="javascript:void(0);" class="iconbox border_purple" ><i class="icon iconfont icon-shoucang"></i></a>
            </button>
        </li>
        <li>
            <button class="left-fixed-btn btn-pinglun csdn-tracking-statistics tracking-click" data-mod="popu_544" title="评论">
                <a href="javascript:void(0);" class="iconbox border_purple" ><i class="icon iconfont icon-pinglun"></i></a>
            </button>
        </li>
        <li class="bdsharebuttonbox csdn-tracking-statistics tracking-click" data-mod="popu_172">
            <a class="bds_tsina outside left-fixed-btn" data-cmd="tsina" title="分享到新浪微博"></a>
            <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
        </li>
        <li class="bdsharebuttonbox csdn-tracking-statistics tracking-click" data-mod="popu_172">
            <a class="bds_weixin outside left-fixed-btn" data-cmd="weixin" title="分享到微信"></a>
            <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
        </li>
        <li class="bdsharebuttonbox csdn-tracking-statistics tracking-click" data-mod="popu_172">
            <a class="bds_qzone outside left-fixed-btn" data-cmd="qzone" title="分享到QQ空间"></a>
            <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
        </li>
        <li id="share_box">
            
            <div class="bdsharebuttonbox csdn-tracking-statistics tracking-click" data-mod="popu_172">
                
                
                
            </div>
        </li>
    </ul>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="https://blog.csdn.net/sinat_36219858/article/details/70186649" target="_blank">python的subprocess．Popen()的简单用法</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="https://csdnimg.cn/release/phoenix/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="https://csdnimg.cn/release/phoenix/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
          console.log("version:phoenix");
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "https://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }
	            nowTime = {
		            year: new Date().getFullYear(),
		            month: parseInt(new Date().getMonth())+1,
		            day: new Date().getDate(),
		            hours: parseInt(new Date().getHours())+1,
		            minutes: parseInt(new Date().getMinutes())+1,
		            seconds: parseInt(new Date().getSeconds())+1
	            };
	            var data = {
		            articleId: fileName,
		            commentId: 0,
		            reportType: reportType,
		            originalurl: $("#originalurl").val(),
		            report_other_content: $("#report_other_content").val(),
		            report_description: $("#report_description").val(),
		            currentUserName: currentUserName,
		            updatetime: nowTime.year+'/'+nowTime.month+'/'+nowTime.day+' '+ nowTime.hours+':'+nowTime.minutes+':'+seconds,
		            blogUser: username
	            };
	            if(!isComment){//如果是举报文章
		            data.report_other_content = data.report_description;
		            // data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
	            }

	            $.post(blog_address + "/common/report?id="+fileName+"&t=2", data, function (data) {
		            if (data.result == 1){
			            SetError("感谢您的举报，我们会尽快审核！");
		            }else{
			            if (data.content) alert(data.content);
		            }

	            });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide();
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>
<!--  fixme 后期清理掉  -->
<div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
    <script id="adJs52b5334"></script>
    <script>document.getElementById("adJs52b5334").src = "https://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</script>
</div>
<script type="text/javascript" src="https://static-blog.csdn.net/mdeditor/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config"> 
    MathJax.Hub.Config({ 
        "HTML-CSS": { 
            linebreaks: { automatic: true, width: "94%container" },
            imageFont: null
        }
    });
</script>
<!-- <script type="text/javascript" src="https://passport.csdn.net/content/loginbox/login.js"></script> -->
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'https://csdnimg.cn/static/api/js/share.js?v=89860594'];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","https://mp.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();

    if($("#fan").html()=="")
    {
	    $("#fan").html(0);
    }
</script>
<script src="https://csdnimg.cn/public/common/append_mark/appendMark.min.js?v=5.00.43" type="text/javascript"></script>
<script type="text/javascript">
    appendMark($('.recommend_list').children('a').find('dt'),$('.extension_other'),$('.yd_a_d_feed_cla'))
</script>
<script src='https://csdnimg.cn/pubfooter/js/publib_footer-1.0.3.js?v201802051726' data-isfootertrack="false"></script>
<script src='https://csdnimg.cn/public/common/gotop/js/goTop-v1.0.min.js?v201803151422'></script>
<script>
    GoTop({
        right: 8,
        hasReport: true,
        reportFun: function() {
            $.createMask();
            var r = blog_address + "/common/report?id=" + fileName + "&t=" + 2;
            if (3 == 2) {
                var s = n.parentNode.parentNode.parentNode.getAttribute("floor");
                r += "&floor=" + s
            }
            var i = (document.documentElement.clientHeight - 400) / 2 + (document.documentElement.scrollTop || document.body.scrollTop),
                a = (document.documentElement.clientWidth - 400) / 2;

            $("#report_dialog").load(r).css({
                //top: i + "px",
                top: '20%',
                left: a
            }).show()
        }
    })
</script>
<script src="https://dup.baidustatic.com/js/os.js"></script>

<div id="loginWrap"></div>
<div id="dlMask"></div>
</body>
