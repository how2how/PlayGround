# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainTable.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 655)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 600))
        MainWindow.setBaseSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 1, 0, 1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setHandleWidth(1)
        self.splitter.setObjectName("splitter")
        self.table = QtWidgets.QTableWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(70)
        sizePolicy.setHeightForWidth(self.table.sizePolicy().hasHeightForWidth())
        self.table.setSizePolicy(sizePolicy)
        self.table.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.table.setGridStyle(QtCore.Qt.SolidLine)
        self.table.setRowCount(10)
        self.table.setObjectName("table")
        self.table.setColumnCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(6, item)
        self.table.horizontalHeader().setStretchLastSection(False)
        self.console_output = QtWidgets.QTextEdit(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.console_output.sizePolicy().hasHeightForWidth())
        self.console_output.setSizePolicy(sizePolicy)
        self.console_output.setObjectName("console_output")
        self.console_input = QtWidgets.QLineEdit(self.splitter)
        self.console_input.setObjectName("console_input")
        self.horizontalLayout.addWidget(self.splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.about = QtWidgets.QMenu(self.menubar)
        self.about.setObjectName("about")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setStyleSheet("image: url(:/test/folder);")
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.action_file = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/test/folder"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_file.setIcon(icon)
        self.action_file.setObjectName("action_file")
        self.action_cmd = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/test/cmd"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_cmd.setIcon(icon1)
        self.action_cmd.setObjectName("action_cmd")
        self.action_process = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/test/process"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_process.setIcon(icon2)
        self.action_process.setObjectName("action_process")
        self.action_system_quit = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/test/exit"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_system_quit.setIcon(icon3)
        self.action_system_quit.setObjectName("action_system_quit")
        self.action_ctlSettings = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/test/settings"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ctlSettings.setIcon(icon4)
        self.action_ctlSettings.setObjectName("action_ctlSettings")
        self.action_svrSettings = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/test/server_settings"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_svrSettings.setIcon(icon5)
        self.action_svrSettings.setObjectName("action_svrSettings")
        self.action_system_start = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/test/running"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_system_start.setIcon(icon6)
        self.action_system_start.setObjectName("action_system_start")
        self.action_system_restart = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/test/restart"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_system_restart.setIcon(icon7)
        self.action_system_restart.setObjectName("action_system_restart")
        self.menu.addAction(self.action_ctlSettings)
        self.menu.addAction(self.action_svrSettings)
        self.menu_2.addAction(self.action_file)
        self.menu_2.addAction(self.action_cmd)
        self.menu_2.addAction(self.action_process)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.about.menuAction())
        self.toolBar.addAction(self.action_ctlSettings)
        self.toolBar.addAction(self.action_svrSettings)
        self.toolBar.addAction(self.action_system_start)
        self.toolBar.addAction(self.action_system_restart)
        self.toolBar.addAction(self.action_system_quit)
        self.toolBar_2.addAction(self.action_file)
        self.toolBar_2.addAction(self.action_cmd)
        self.toolBar_2.addAction(self.action_process)

        self.retranslateUi(MainWindow)
        self.console_output.textChanged.connect(self.console_output.selectAll)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Id"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Ip"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Host"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "OS"))
        item = self.table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "User"))
        item = self.table.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Mark"))
        item = self.table.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "SessionId"))
        self.console_input.setText(_translate("MainWindow", "> "))
        self.menu.setTitle(_translate("MainWindow", "配置"))
        self.about.setTitle(_translate("MainWindow", "关于"))
        self.menu_2.setTitle(_translate("MainWindow", "功能"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.action_file.setIconText(_translate("MainWindow", "文件管理"))
        self.action_file.setToolTip(_translate("MainWindow", "文件管理"))
        self.action_file.setStatusTip(_translate("MainWindow", "文件管理"))
        self.action_file.setShortcut(_translate("MainWindow", "Ctrl+Shift+F"))
        self.action_cmd.setText(_translate("MainWindow", "命令执行"))
        self.action_cmd.setToolTip(_translate("MainWindow", "命令执行"))
        self.action_cmd.setStatusTip(_translate("MainWindow", "命令执行"))
        self.action_cmd.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.action_process.setText(_translate("MainWindow", "进程管理"))
        self.action_process.setToolTip(_translate("MainWindow", "进程管理"))
        self.action_process.setStatusTip(_translate("MainWindow", "进程管理"))
        self.action_process.setShortcut(_translate("MainWindow", "Ctrl+Shift+P"))
        self.action_system_quit.setText(_translate("MainWindow", "退出"))
        self.action_system_quit.setToolTip(_translate("MainWindow", "系统关闭"))
        self.action_system_quit.setStatusTip(_translate("MainWindow", "系统关闭"))
        self.action_system_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_ctlSettings.setText(_translate("MainWindow", "控制端配置"))
        self.action_ctlSettings.setToolTip(_translate("MainWindow", "控制端配置"))
        self.action_ctlSettings.setStatusTip(_translate("MainWindow", "控制端配置"))
        self.action_ctlSettings.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.action_svrSettings.setText(_translate("MainWindow", "服务端设置"))
        self.action_svrSettings.setToolTip(_translate("MainWindow", "服务端设置"))
        self.action_svrSettings.setStatusTip(_translate("MainWindow", "服务端设置"))
        self.action_svrSettings.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.action_system_start.setText(_translate("MainWindow", "启动"))
        self.action_system_start.setToolTip(_translate("MainWindow", "系统启动"))
        self.action_system_start.setStatusTip(_translate("MainWindow", "系统启动"))
        self.action_system_restart.setText(_translate("MainWindow", "重启"))
        self.action_system_restart.setToolTip(_translate("MainWindow", "系统重启"))
        self.action_system_restart.setStatusTip(_translate("MainWindow", "系统重启"))

import test_rc
